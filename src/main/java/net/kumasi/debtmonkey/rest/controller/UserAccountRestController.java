/*
 * Created on 17 Feb 2017 ( Time 16:36:37 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.debtmonkey.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import net.kumasi.debtmonkey.domain.UserAccount;
import net.kumasi.debtmonkey.business.service.UserAccountService;
import net.kumasi.debtmonkey.web.listitem.UserAccountListItem;

/**
 * Spring MVC controller for 'UserAccount' management.
 */
@Controller
public class UserAccountRestController {

	@Resource
	private UserAccountService userAccountService;
	
	@RequestMapping( value="/items/userAccount",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UserAccountListItem> findAllAsListItems() {
		List<UserAccount> list = userAccountService.findAll();
		List<UserAccountListItem> items = new LinkedList<UserAccountListItem>();
		for ( UserAccount userAccount : list ) {
			items.add(new UserAccountListItem( userAccount ) );
		}
		return items;
	}
	
	@RequestMapping( value="/userAccount",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UserAccount> findAll() {
		return userAccountService.findAll();
	}

	@RequestMapping( value="/userAccount/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserAccount findOne(@PathVariable("id") Integer id) {
		return userAccountService.findById(id);
	}
	
	@RequestMapping( value="/userAccount",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserAccount create(@RequestBody UserAccount userAccount) {
		return userAccountService.create(userAccount);
	}

	@RequestMapping( value="/userAccount/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserAccount update(@PathVariable("id") Integer id, @RequestBody UserAccount userAccount) {
		return userAccountService.update(userAccount);
	}

	@RequestMapping( value="/userAccount/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		userAccountService.delete(id);
	}
	
}
