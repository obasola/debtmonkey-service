/*
 * Created on 17 Feb 2017 ( Time 16:36:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.debtmonkey.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import net.kumasi.debtmonkey.domain.AccountAddress;
import net.kumasi.debtmonkey.domain.AddressType;
import net.kumasi.debtmonkey.domain.jpa.AccountAddressEntity;
import net.kumasi.debtmonkey.domain.jpa.AddressTypeEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class AccountAddressServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public AccountAddressServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'AccountAddressEntity' to 'AccountAddress'
	 * @param accountAddressEntity
	 */
	public AccountAddress mapAccountAddressEntityToAccountAddress(AccountAddressEntity accountAddressEntity) {
		if(accountAddressEntity == null) {
			return null;
		}

		//--- Generic mapping 
		AccountAddress accountAddress = map(accountAddressEntity, AccountAddress.class);

		//--- Link mapping ( link to AddressType )
		if(accountAddressEntity.getAddressType() != null) {
			AddressType addrType = map(accountAddressEntity.getAddressType(), AddressType.class);
			accountAddress.setAddressType(addrType);
		}
		return accountAddress;
	}
	
	/**
	 * Mapping from 'AccountAddress' to 'AccountAddressEntity'
	 * @param accountAddress
	 * @param accountAddressEntity
	 */
	public void mapAccountAddressToAccountAddressEntity(AccountAddress accountAddress, AccountAddressEntity accountAddressEntity) {
		if(accountAddress == null) {
			return;
		}

		//--- Generic mapping 
		map(accountAddress, accountAddressEntity);

		//--- Link mapping ( link : accountAddress )
		if( hasLinkToAddressType(accountAddress) ) {
			AddressTypeEntity addressType1 = new AddressTypeEntity();
			addressType1.setId( accountAddress.getAddressTypeId() );
			accountAddressEntity.setAddressType( addressType1 );
		} else {
			accountAddressEntity.setAddressType( null );
		}

	}
	
	/**
	 * Verify that AddressType id is valid.
	 * @param AddressType AddressType
	 * @return boolean
	 */
	private boolean hasLinkToAddressType(AccountAddress accountAddress) {
		if(accountAddress.getAddressTypeId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}