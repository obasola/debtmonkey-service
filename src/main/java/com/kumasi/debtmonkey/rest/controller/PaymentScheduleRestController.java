/*
 * Created on 6 Sep 2016 ( Time 17:16:57 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.debtmonkey.rest.controller;

import com.kumasi.debtmonkey.business.service.PaymentScheduleCalculator;
import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.debtmonkey.model.PaymentSchedule;
import com.kumasi.debtmonkey.business.service.PaymentScheduleService;
import com.kumasi.debtmonkey.web.listitem.PaymentScheduleListItem;
import org.jboss.logging.Logger;

/**
 * Spring MVC controller for 'PaymentSchedule' management.
 */
@Controller
public class PaymentScheduleRestController {
    private Logger logger = Logger.getLogger(PaymentScheduleRestController.class);
    @Resource
    private PaymentScheduleService paymentScheduleService;

    @Resource
    private PaymentScheduleCalculator calculatorService;
    
    @RequestMapping(value = "/items/paymentSchedule",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
    @ResponseBody
    public List<PaymentScheduleListItem> findAllAsListItems() {
        List<PaymentSchedule> list = paymentScheduleService.findAll();
        List<PaymentScheduleListItem> items = new LinkedList<PaymentScheduleListItem>();
        for (PaymentSchedule paymentSchedule : list) {
            try{
                paymentSchedule.setNextPaymentDue(calculatorService.getNextPaymentDate(paymentSchedule.getNextPaymentDue()));
            }catch(Exception e) {
                logger.debug(e.getMessage());                             
            }
            items.add(new PaymentScheduleListItem(paymentSchedule));
        }
        return items;
    }

    @RequestMapping(value = "/paymentSchedule",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
    @ResponseBody
    public List<PaymentSchedule> findAll() {
        return paymentScheduleService.findAll();
    }

    @RequestMapping(value = "/paymentSchedule/{id}",
            method = RequestMethod.GET,
            produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
    @ResponseBody
    public PaymentSchedule findOne(@PathVariable("id") Integer id) {
        return paymentScheduleService.findById(id);
    }

    @RequestMapping(value = "/paymentSchedule",
            method = RequestMethod.POST,
            produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
    @ResponseBody
    public PaymentSchedule create(@RequestBody PaymentSchedule paymentSchedule) {
        return paymentScheduleService.create(paymentSchedule);
    }

    @RequestMapping(value = "/paymentSchedule/{id}",
            method = RequestMethod.PUT,
            produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
    @ResponseBody
    public PaymentSchedule update(@PathVariable("id") Integer id, @RequestBody PaymentSchedule paymentSchedule) {
        return paymentScheduleService.update(paymentSchedule);
    }

    @RequestMapping(value = "/paymentSchedule/{id}",
            method = RequestMethod.DELETE,
            produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
    @ResponseBody
    public void delete(@PathVariable("id") Integer id) {
        paymentScheduleService.delete(id);
    }

}
