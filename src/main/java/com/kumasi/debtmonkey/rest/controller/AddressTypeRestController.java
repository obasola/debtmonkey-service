/*
 * Created on 11 Feb 2017 ( Time 18:00:51 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.kumasi.debtmonkey.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.kumasi.debtmonkey.model.AddressType;
import com.kumasi.debtmonkey.business.service.AddressTypeService;
import com.kumasi.debtmonkey.web.listitem.AddressTypeListItem;

/**
 * Spring MVC controller for 'AddressType' management.
 */
@Controller
public class AddressTypeRestController {

	@Resource
	private AddressTypeService addressTypeService;
	
	@RequestMapping( value="/items/addressType",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AddressTypeListItem> findAllAsListItems() {
		List<AddressType> list = addressTypeService.findAll();
		List<AddressTypeListItem> items = new LinkedList<AddressTypeListItem>();
		for ( AddressType addressType : list ) {
			items.add(new AddressTypeListItem( addressType ) );
		}
		return items;
	}
	
	@RequestMapping( value="/addressType",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AddressType> findAll() {
		return addressTypeService.findAll();
	}

	@RequestMapping( value="/addressType/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AddressType findOne(@PathVariable("id") Integer id) {
		return addressTypeService.findById(id);
	}
	
	@RequestMapping( value="/addressType",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AddressType create(@RequestBody AddressType addressType) {
		return addressTypeService.create(addressType);
	}

	@RequestMapping( value="/addressType/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AddressType update(@PathVariable("id") Integer id, @RequestBody AddressType addressType) {
		return addressTypeService.update(addressType);
	}

	@RequestMapping( value="/addressType/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		addressTypeService.delete(id);
	}
	
}
