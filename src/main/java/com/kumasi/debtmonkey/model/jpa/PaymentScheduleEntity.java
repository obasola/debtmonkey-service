/*
 * Created on 6 Sep 2016 ( Time 17:16:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.kumasi.debtmonkey.model.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "Payment_Schedule"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="Payment_Schedule", catalog="homeAccount" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PaymentScheduleEntity.countAll", query="SELECT COUNT(x) FROM PaymentScheduleEntity x" )
} )
public class PaymentScheduleEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.DATE)
    @Column(name="next_payment_due")
    private Date       nextPaymentDue ;

    @Column(name="balance_due")
    private Double     balanceDue   ;

	// "accountId" (column "Account_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="Account_id", referencedColumnName="id")
    private AccountEntity account     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PaymentScheduleEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : next_payment_due ( DATE ) 
    public void setNextPaymentDue( Date nextPaymentDue ) {
        this.nextPaymentDue = nextPaymentDue;
    }
    public Date getNextPaymentDue() {
        return this.nextPaymentDue;
    }

    //--- DATABASE MAPPING : balance_due ( DOUBLE ) 
    public void setBalanceDue( Double balanceDue ) {
        this.balanceDue = balanceDue;
    }
    public Double getBalanceDue() {
        return this.balanceDue;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setAccount( AccountEntity account ) {
        this.account = account;
    }
    public AccountEntity getAccount() {
        return this.account;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(nextPaymentDue);
        sb.append("|");
        sb.append(balanceDue);
        return sb.toString(); 
    } 

}
