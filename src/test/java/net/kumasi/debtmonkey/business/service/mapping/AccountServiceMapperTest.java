/*
 * Created on 17 Feb 2017 ( Time 16:36:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.debtmonkey.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import net.kumasi.debtmonkey.domain.Account;
import net.kumasi.debtmonkey.domain.jpa.AccountEntity;
import net.kumasi.debtmonkey.domain.jpa.AccountAddressEntity;
import net.kumasi.debtmonkey.domain.jpa.UserAccountEntity;
import net.kumasi.debtmonkey.domain.jpa.AccountTypeEntity;
import net.kumasi.debtmonkey.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class AccountServiceMapperTest {

	private AccountServiceMapper accountServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		accountServiceMapper = new AccountServiceMapper();
		accountServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'AccountEntity' to 'Account'
	 * @param accountEntity
	 */
	@Test
	public void testMapAccountEntityToAccount() {
		// Given
		AccountEntity accountEntity = new AccountEntity();
		accountEntity.setAccountName(mockValues.nextString(45));
		accountEntity.setOriginalBalance(mockValues.nextDouble());
		accountEntity.setCurrentBalance(mockValues.nextDouble());
		accountEntity.setDateLastPayment(mockValues.nextDate());
		accountEntity.setDateOpened(mockValues.nextDate());
		accountEntity.setDateClosed(mockValues.nextDate());
		accountEntity.setDateCreated(mockValues.nextDate());
		accountEntity.setDateModified(mockValues.nextDate());
		accountEntity.setAutoPayment(mockValues.nextByte());
		accountEntity.setAccountAddress(new AccountAddressEntity());
		accountEntity.getAccountAddress().setId(mockValues.nextInteger());
		accountEntity.setUserAccount(new UserAccountEntity());
		accountEntity.getUserAccount().setId(mockValues.nextInteger());
		accountEntity.setAccountType(new AccountTypeEntity());
		accountEntity.getAccountType().setId(mockValues.nextInteger());
		
		// When
		Account account = accountServiceMapper.mapAccountEntityToAccount(accountEntity);
		
		// Then
		assertEquals(accountEntity.getAccountName(), account.getAccountName());
		assertEquals(accountEntity.getOriginalBalance(), account.getOriginalBalance());
		assertEquals(accountEntity.getCurrentBalance(), account.getCurrentBalance());
		assertEquals(accountEntity.getDateLastPayment(), account.getDateLastPayment());
		assertEquals(accountEntity.getDateOpened(), account.getDateOpened());
		assertEquals(accountEntity.getDateClosed(), account.getDateClosed());
		assertEquals(accountEntity.getDateCreated(), account.getDateCreated());
		assertEquals(accountEntity.getDateModified(), account.getDateModified());
		assertEquals(accountEntity.getAutoPayment(), account.getAutoPayment());
		assertEquals(accountEntity.getAccountAddress().getId(), account.getAccountAddressId());
		assertEquals(accountEntity.getUserAccount().getId(), account.getUserAccountId());
		assertEquals(accountEntity.getAccountType().getId(), account.getAccountTypeId());
	}
	
	/**
	 * Test : Mapping from 'Account' to 'AccountEntity'
	 */
	@Test
	public void testMapAccountToAccountEntity() {
		// Given
		Account account = new Account();
		account.setAccountName(mockValues.nextString(45));
		account.setOriginalBalance(mockValues.nextDouble());
		account.setCurrentBalance(mockValues.nextDouble());
		account.setDateLastPayment(mockValues.nextDate());
		account.setDateOpened(mockValues.nextDate());
		account.setDateClosed(mockValues.nextDate());
		account.setDateCreated(mockValues.nextDate());
		account.setDateModified(mockValues.nextDate());
		account.setAutoPayment(mockValues.nextByte());
		account.setAccountAddressId(mockValues.nextInteger());
		account.setUserAccountId(mockValues.nextInteger());
		account.setAccountTypeId(mockValues.nextInteger());

		AccountEntity accountEntity = new AccountEntity();
		
		// When
		accountServiceMapper.mapAccountToAccountEntity(account, accountEntity);
		
		// Then
		assertEquals(account.getAccountName(), accountEntity.getAccountName());
		assertEquals(account.getOriginalBalance(), accountEntity.getOriginalBalance());
		assertEquals(account.getCurrentBalance(), accountEntity.getCurrentBalance());
		assertEquals(account.getDateLastPayment(), accountEntity.getDateLastPayment());
		assertEquals(account.getDateOpened(), accountEntity.getDateOpened());
		assertEquals(account.getDateClosed(), accountEntity.getDateClosed());
		assertEquals(account.getDateCreated(), accountEntity.getDateCreated());
		assertEquals(account.getDateModified(), accountEntity.getDateModified());
		assertEquals(account.getAutoPayment(), accountEntity.getAutoPayment());
		assertEquals(account.getAccountAddressId(), accountEntity.getAccountAddress().getId());
		assertEquals(account.getUserAccountId(), accountEntity.getUserAccount().getId());
		assertEquals(account.getAccountTypeId(), accountEntity.getAccountType().getId());
	}

}