/*
 * Created on 17 Feb 2017 ( Time 16:36:26 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package net.kumasi.debtmonkey.business.service.mapping;

import static org.junit.Assert.assertEquals;

import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import net.kumasi.debtmonkey.domain.UserAccount;
import net.kumasi.debtmonkey.domain.jpa.UserAccountEntity;
import net.kumasi.debtmonkey.test.MockValues;

/**
 * Test : Mapping between entity beans and display beans.
 */
public class UserAccountServiceMapperTest {

	private UserAccountServiceMapper userAccountServiceMapper;

	private static ModelMapper modelMapper = new ModelMapper();

	private MockValues mockValues = new MockValues();
	
	
	@BeforeClass
	public static void setUp() {
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}
	
	@Before
	public void before() {
		userAccountServiceMapper = new UserAccountServiceMapper();
		userAccountServiceMapper.setModelMapper(modelMapper);
	}
	
	/**
	 * Mapping from 'UserAccountEntity' to 'UserAccount'
	 * @param userAccountEntity
	 */
	@Test
	public void testMapUserAccountEntityToUserAccount() {
		// Given
		UserAccountEntity userAccountEntity = new UserAccountEntity();
		userAccountEntity.setUserName(mockValues.nextString(15));
		userAccountEntity.setEmailAddress(mockValues.nextString(45));
		userAccountEntity.setPassword(mockValues.nextString(45));
		userAccountEntity.setFirstName(mockValues.nextString(45));
		userAccountEntity.setLastName(mockValues.nextString(45));
		
		// When
		UserAccount userAccount = userAccountServiceMapper.mapUserAccountEntityToUserAccount(userAccountEntity);
		
		// Then
		assertEquals(userAccountEntity.getUserName(), userAccount.getUserName());
		assertEquals(userAccountEntity.getEmailAddress(), userAccount.getEmailAddress());
		assertEquals(userAccountEntity.getPassword(), userAccount.getPassword());
		assertEquals(userAccountEntity.getFirstName(), userAccount.getFirstName());
		assertEquals(userAccountEntity.getLastName(), userAccount.getLastName());
	}
	
	/**
	 * Test : Mapping from 'UserAccount' to 'UserAccountEntity'
	 */
	@Test
	public void testMapUserAccountToUserAccountEntity() {
		// Given
		UserAccount userAccount = new UserAccount();
		userAccount.setUserName(mockValues.nextString(15));
		userAccount.setEmailAddress(mockValues.nextString(45));
		userAccount.setPassword(mockValues.nextString(45));
		userAccount.setFirstName(mockValues.nextString(45));
		userAccount.setLastName(mockValues.nextString(45));

		UserAccountEntity userAccountEntity = new UserAccountEntity();
		
		// When
		userAccountServiceMapper.mapUserAccountToUserAccountEntity(userAccount, userAccountEntity);
		
		// Then
		assertEquals(userAccount.getUserName(), userAccountEntity.getUserName());
		assertEquals(userAccount.getEmailAddress(), userAccountEntity.getEmailAddress());
		assertEquals(userAccount.getPassword(), userAccountEntity.getPassword());
		assertEquals(userAccount.getFirstName(), userAccountEntity.getFirstName());
		assertEquals(userAccount.getLastName(), userAccountEntity.getLastName());
	}

}